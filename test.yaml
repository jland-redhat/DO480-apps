apiVersion: v1
kind: Service
metadata:
  labels:
    app: todonodejs
    name: frontend
  name: frontend-apac
spec:
  ports:
  - port: 8080
  selector:
    name: frontend
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: todonodejs
    name: mysql
  name: mysql-apac
spec:
  ports:
  - port: 3306
  selector:
    name: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: todonodejs
    name: frontend
  name: frontend-apac
  namespace: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todonodejs
      name: frontend
  template:
    metadata:
      labels:
        app: todonodejs
        name: frontend
    spec:
      containers:
      - env:
        - name: MYSQL_ENV_MYSQL_DATABASE
          value: items
        - name: MYSQL_ENV_MYSQL_USER
          value: user1
        - name: MYSQL_ENV_MYSQL_PASSWORD
          value: mypa55
        - name: APP_PORT
          value: "8080"
        image: quay.io/redhattraining/todo-single:v1.0
        name: todonodejs
        ports:
        - containerPort: 8080
          name: nodejs-http
        resources:
          limits:
            cpu: "0.5"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: todonodejs
    name: mysql
  name: mysql-apac
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todonodejs
      name: mysql
  template:
    metadata:
      labels:
        app: todonodejs
        name: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          value: r00tpa55
        - name: MYSQL_USER
          value: user1
        - name: MYSQL_PASSWORD
          value: mypa55
        - name: MYSQL_DATABASE
          value: items
        image: registry.redhat.io/rhel8/mysql-80:1521111
        name: mysql
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: db-volume
      volumes:
      - emptyDir: {}
        name: db-volume
      - emptyDir: {}
        name: db-init
